<<<<<<< HEAD
name: CI - Node.js App

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        env:
          MONGO_URI: mongodb://localhost:27017/testdb
          JWT_SECRET: supersecretkey
          NODE_ENV: test
        run: npm test
=======
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
        working-directory: server
      - run: npm run test:ci
        working-directory: server

  client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
        working-directory: client
      - run: npm run test:ci
        working-directory: client
>>>>>>> 7258184 (frontend code completed)
